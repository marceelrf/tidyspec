[{"path":"https://marceelrf.github.io/tidyspec/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 tidyspec authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"instalation","dir":"Articles","previous_headings":"","what":"Instalation","title":"Introduction","text":"","code":"remotes::install_github(\"marceelrf/tidyspec\")"},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"package-overview","dir":"Articles","previous_headings":"","what":"Package overview","title":"Introduction","text":"package organizes utilities 6 families, prefixed spec_: 1. Transformationspec_abs2trans(): Convert absorbance transmittance. spec_trans2abs(): Convert transmittance absorbance. 2. Normalizationspec_norm_01(): Normalize spectra range [0, 1]. spec_norm_minmax(): Normalize custom range. spec_norm_var(): Scale standard deviation = 1. 3. Baseline Correctionspec_blc_rollingBall(): Correct baseline using rolling ball algorithm. spec_blc_irls(): Correct using Iterative Restricted Least Squares. spec_bl_*(): Return baseline vectors (e.g., spec_bl_rollingBall). 4. Smoothingspec_smooth_avg(): Smooth moving average. spec_smooth_sga(): Smooth using Savitzky-Golay. 5. Derivativespec_diff(): Compute spectral derivatives. 6. Preview & /Ospec_smartplot(): Static preview spectra. spec_smartplotly(): Interactive preview ({Plotly}). spec_read(): Import .csv, .txt, .xlsx, etc.","code":"library(tidyspec) library(tidyverse)"},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Introduction","text":"CoHAspec dataset spectral table wide format, : Rows: Wavenumbers (cm⁻¹). Columns: Samples (CoHA01, CoHA025, CoHA05, CoHA100). Values: Absorbance/intensity measurements. ’s preview data:","code":"CoHAspec #> # A tibble: 1,868 × 5 #>    Wavenumber CoHA01 CoHA025 CoHA05 CoHA100 #>         <dbl>  <dbl>   <dbl>  <dbl>   <dbl> #>  1       399.  0.871   1.36   1.17    1.05  #>  2       401.  0.893   1.24   1.05    0.925 #>  3       403.  0.910   1.20   0.997   0.876 #>  4       405.  0.914   1.19   0.982   0.867 #>  5       407.  0.908   1.18   0.965   0.857 #>  6       409.  0.887   1.14   0.936   0.828 #>  7       411.  0.856   1.08   0.902   0.791 #>  8       413.  0.819   1.03   0.865   0.748 #>  9       415.  0.789   0.988  0.838   0.717 #> 10       417.  0.768   1.000  0.860   0.735 #> # ℹ 1,858 more rows"},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"wavenumber-handling","dir":"Articles","previous_headings":"Data","what":"Wavenumber Handling","title":"Introduction","text":"function set_spec_wn simplifies use functions globally defining column contains wave numbers. User can check wavenumber column check_wn_col.","code":"set_spec_wn(\"Wavenumber\") #> Successfully set 'Wavenumber' as the default wavenumber column. check_wn_col() #> The current wavenumber column is: Wavenumber"},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"visualize-the-data","dir":"Articles","previous_headings":"","what":"Visualize the data","title":"Introduction","text":"Scientists work spectroscopy data always want visualize operation. ’s created spec_smartplot spec_smartplotly functions help users. spec_smartplot creates static visualization spectra, spec_smartplotly creates interactive visualization, allowing user navigate values different data. Static spectral plot showing samples functions simplify process automating , invite users make figures presentations publications. part efforts create community tidyspec users, plan create ggplot2 extension high-level spectroscopy graphics. now, can produce ggplot2 graphs pivoting data: Custom ggplot2 visualization spectral data","code":"spec_smartplot(CoHAspec) #> Warning: wn_col not specified. Using default value: Wavenumber. #> This message is shown at most once every 2 hours. #> Warning: xmin not specified. Using default value: 399.1992. #> This message is shown at most once every 2 hours. #> Warning: xmax not specified. Using default value: 3999.706. #> This message is shown at most once every 2 hours. spec_smartplotly(CoHAspec,geom = \"line\") CoHAspec %>%    tidyr::pivot_longer(cols = -Wavenumber,                       names_to = \"spectrums\",                       values_to = \"absorbance\") %>%    ggplot(aes(x = Wavenumber, y = absorbance, col = spectrums)) +   geom_line() #<------ Customize your data from here"},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"convert-to-transmittance-and-back-to-absorbance","dir":"Articles","previous_headings":"","what":"Convert to transmittance (and back to absorbance)","title":"Introduction","text":"functions spec_abs2trans spec_trans2abs designed easily convert spectras.","code":"CoHAspec %>%      spec_abs2trans() %>%     spec_smartplot() CoHAspec %>%      spec_abs2trans() %>%     spec_trans2abs() %>%     spec_smartplot()"},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"select-spectra","dir":"Articles","previous_headings":"","what":"Select spectra","title":"Introduction","text":"Tidyspec designed easily integrated entire tidyverse ecosystem. user can easily choose spectra keep/discard using dplyr::select.  However, since tidyspec needs column containing wave numbers user end messing keeping operations, decided develop spec_select simplifies process.","code":"CoHAspec %>%      dplyr::select(Wavenumber,CoHA100) %>%     tidyspec::spec_smartplot() CoHAspec %>%      tidyspec::spec_select(CoHA100) %>%     tidyspec::spec_smartplot()"},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"filter-spectra","dir":"Articles","previous_headings":"","what":"Filter spectra","title":"Introduction","text":"Similarly spectrum selection process, filtering regions spectrum can done using dplyr::filter. spec_filter simplifies process filtering desired regions.","code":"CoHAspec_filt <-      CoHAspec %>%      tidyspec::spec_select(CoHA100) %>%     dplyr::filter(Wavenumber > 1000,                 Wavenumber < 1950) CoHAspec_filt <-      CoHAspec %>%      spec_select(CoHA100) %>%     spec_filter(wn_min = 1000,                 wn_max = 1950)  spec_smartplot(CoHAspec_filt, geom = \"line\")"},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"smoothing-the-data","dir":"Articles","previous_headings":"","what":"Smoothing the data","title":"Introduction","text":"Spectroscopic data often contains noise can interfere analysis interpretation. Smoothing techniques help reduce noise preserving essential spectral features. tidyspec package provides two main smoothing methods: moving averages Savitzky-Golay filtering.","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"moving-averages-method","dir":"Articles","previous_headings":"Smoothing the data","what":"Moving averages method","title":"Introduction","text":"moving average method (spec_smooth_avg()) one simplest intuitive smoothing techniques. works replacing data point average neighboring points within specified window size. method particularly effective reducing random noise maintaining overall shape spectral peaks.","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"how-it-works","dir":"Articles","previous_headings":"Smoothing the data > Moving averages method","what":"How it works:","title":"Introduction","text":"point, calculates mean surrounding points within defined window Larger windows provide smoothing may blur important features Smaller windows preserve detail provide less noise reduction","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"parameters","dir":"Articles","previous_headings":"Smoothing the data > Moving averages method","what":"Parameters:","title":"Introduction","text":"wn_col: Column name wavelength data (default: “Wn”) window: Window size moving average (default: 15) degree: Polynomial degree smoothing (default: 2)","code":"CoHAspec_filt %>%    spec_smooth_avg() %>%   spec_smartplot(geom = \"line\")"},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"savitz-golay-method","dir":"Articles","previous_headings":"Smoothing the data","what":"Savitz-Golay method","title":"Introduction","text":"Savitzky-Golay filter (spec_smooth_sga()) sophisticated smoothing technique particularly well-suited spectroscopic data. Unlike simple moving averages, method fits polynomial local subset data points uses polynomial estimate smoothed value. approach especially effective preserving peak shapes, heights, widths reducing noise.","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"how-it-works-1","dir":"Articles","previous_headings":"Smoothing the data > Savitz-Golay method","what":"How it works:","title":"Introduction","text":"data point, fits polynomial specified degree nearby points within window smoothed value calculated local polynomial fit preserves underlying spectral features better simple averaging method can also calculate derivatives directly smoothing process","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"parameters-1","dir":"Articles","previous_headings":"Smoothing the data > Savitz-Golay method","what":"Parameters:","title":"Introduction","text":"wn_col: Column name wavelength data (default: “Wn”) window: Window size smoothing (default: 15, odd) forder: Polynomial order fitting (default: 4) degree: Degree differentiation (default: 0 = smoothing )","code":"CoHAspec_filt %>%    spec_smooth_sga() %>%   spec_smartplot(geom = \"line\")"},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"comparison-with-moving-average","dir":"Articles","previous_headings":"Smoothing the data","what":"Comparison with moving average:","title":"Introduction","text":"Savitzky-Golay: Better peak preservation, computationally intensive Moving average: Faster computation, simpler implementation, peak distortion","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"derivatives","dir":"Articles","previous_headings":"","what":"Derivatives","title":"Introduction","text":"Differentiation spectral data fundamental technique chemometrics allows highlighting specific spectral features, reducing baseline effects, improving resolution overlapping peaks. spec_diff() function implements numerical differentiation spectral data, offering flexibility calculate first-order higher-order derivatives.","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"using-the-spec_diff-function","dir":"Articles","previous_headings":"Derivatives","what":"Using the spec_diff() Function","title":"Introduction","text":"spec_diff() function accepts following arguments: .data: data.frame tibble containing spectral data wn_col: character string specifying column name wavelength data (default: “Wn”) degree: numeric value specifying degree differentiation. degree = 0, original data returned without changes Example:  pipeline: filtered spectral data (CoHAspec_filt) first smoothed using Savitzky-Golay algorithm , second-order derivative applied using spec_diff(degree = 2) result visualized spec_smartplot() line geometry","code":"CoHAspec_filt %>%      tidyspec::spec_smooth_sga() %>%     spec_diff(degree = 2) %>%     tidyspec::spec_smartplot(geom = \"line\") #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_line()`)."},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"baseline-correction","dir":"Articles","previous_headings":"","what":"Baseline correction","title":"Introduction","text":"Baseline correction crucial preprocessing step spectral analysis removes systematic variations baseline related analyte interest. baseline variations can arise instrumental drift, scattering effects, sample positioning, optical interferences. Proper baseline correction enhances spectral quality improves accuracy subsequent quantitative qualitative analyses.","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"rolling-ball-method","dir":"Articles","previous_headings":"Baseline correction","what":"Rolling ball method","title":"Introduction","text":"rolling ball algorithm popular baseline correction technique estimates baseline “rolling” virtual ball specified radius beneath spectrum. method particularly effective correcting baselines smooth, curved variations widely used various spectroscopic applications.","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"function-parameters","dir":"Articles","previous_headings":"Baseline correction > Rolling ball method","what":"Function Parameters","title":"Introduction","text":"spec_blc_rollingBall() function provides comprehensive control baseline correction process: .data: data.frame tibble containing spectral data wn_col: Column name wavelength data (default: “Wn”) wn_min: Minimum wavelength baseline correction range wn_max: Maximum wavelength baseline correction range wm: Window size rolling ball algorithm (controls ball radius) ws: Smoothing factor rolling ball algorithm is_abs: Logical indicating data absorbance format","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"baseline-correction-application","dir":"Articles","previous_headings":"Baseline correction > Rolling ball method","what":"Baseline Correction Application","title":"Introduction","text":"following example demonstrates baseline correction applied specific wavelength range:  pipeline: Smoothing applied first reduce noise Rolling ball correction performed 1030-1285 cm⁻¹ range Window size (wm = 50) smoothing factor (ws = 10) optimized data","code":"CoHAspec_filt %>%      spec_smooth_sga() %>%     spec_blc_rollingBall(wn_min = 1030,                          wn_max = 1285,                          ws = 10,                          wm = 50) %>%     tidyspec::spec_smartplot(geom = \"line\")"},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"looking-to-the-baseline","dir":"Articles","previous_headings":"Baseline correction","what":"Looking to the baseline","title":"Introduction","text":"better understand correction process, can examine estimated baseline using spec_bl_rollingBall():  visualization shows estimated baseline, allowing assess whether algorithm properly captures underlying baseline trend.","code":"CoHAspec_filt %>%      spec_smooth_sga() %>%     spec_bl_rollingBall(wn_col = \"Wavenumber\",                         wn_min = 1030,                         wn_max = 1285,                         ws = 10,                         wm = 50) %>%    spec_smartplot()"},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"comparing-original-and-baseline","dir":"Articles","previous_headings":"Baseline correction > Looking to the baseline","what":"Comparing Original and Baseline","title":"Introduction","text":"comprehensive view correction process, can overlay original spectrum estimated baseline:  comparison allows : Evaluate baseline estimation quality Identify regions algorithm may need parameter adjustment Verify baseline follows expected spectral trend","code":"bl <- CoHAspec_filt %>%      spec_smooth_sga() %>%     spec_bl_rollingBall(wn_col = \"Wavenumber\",                          wn_min = 1030,                          wn_max = 1285,                          ws = 10, wm = 50)  CoHAspec_filt %>%   spec_smooth_sga() %>%   spec_filter(wn_min = 1030, wn_max = 1285) %>%    left_join(bl) %>%    spec_smartplot(geom = \"line\") #> Joining with `by = join_by(Wavenumber, CoHA100)`"},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"scaling-the-spectra","dir":"Articles","previous_headings":"","what":"Scaling the spectra","title":"Introduction","text":"Spectral scaling (normalization) preprocessing technique standardizes spectral data facilitate comparison samples improve performance multivariate analysis methods. Different scaling approaches address various sources systematic variation spectral data, differences sample concentration, path length, instrumental response.","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"importance-of-spectral-scaling","dir":"Articles","previous_headings":"Scaling the spectra","what":"Importance of Spectral Scaling","title":"Introduction","text":"Scaling essential : _ Sample concentrations vary: Different analyte concentrations can mask spectral patterns _ Path lengths differ: Variations sample thickness affect overall intensity _ Instrumental variations exist: Different measurement conditions create systematic offsets _ Multivariate analysis planned: Many chemometric methods assume standardized data _ Pattern recognition goal: Scaling emphasizes spectral shape absolute intensity","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"working-with-a-spectral-region","dir":"Articles","previous_headings":"Scaling the spectra","what":"Working with a Spectral Region","title":"Introduction","text":"demonstration purposes, ’ll work specific spectral region contains relevant analytical information:  region (1300-1950 cm⁻¹) selected focus specific spectral features avoiding regions might contain noise irrelevant information.","code":"CoHAspec_region <- CoHAspec  %>%     dplyr::filter(Wavenumber > 1300,                 Wavenumber < 1950)  CoHAspec_region %>%      spec_smartplot(geom = \"line\")"},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"min-max-normalization-0-1-scaling","dir":"Articles","previous_headings":"Scaling the spectra","what":"Min-Max Normalization (0-1 Scaling)","title":"Introduction","text":"Min-max normalization scales spectrum range 0 1, preserving relative relationships spectral intensities standardizing dynamic range.","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"mathematical-foundation","dir":"Articles","previous_headings":"Scaling the spectra > Min-Max Normalization (0-1 Scaling)","what":"Mathematical Foundation","title":"Introduction","text":"spectrum, transformation : Normalized value = (Value - Minimum) / (Maximum - Minimum) Results values ranging 0 1 Preserves original spectral shape  spec_norm_01() function: Finds minimum maximum values spectrum Applies min-max transformation Maintains spectral shape standardizing intensity range particularly useful absolute intensity differences analytically relevant","code":"CoHAspec_region %>%     spec_norm_01() %>%      spec_smartplot(geom = \"line\")"},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"when-to-use-min-max-normalization","dir":"Articles","previous_headings":"Scaling the spectra > Min-Max Normalization (0-1 Scaling)","what":"When to Use Min-Max Normalization","title":"Introduction","text":"Min-max scaling ideal : want preserve spectral shape Absolute intensities vary due concentration differences Visual comparison spectral patterns important dynamic range needs standardization user can set min max value spec_norm_minmax() function:","code":"CoHAspec_region %>%     spec_norm_minmax(min = 1, max = 2) %>%      spec_smartplot(geom = \"line\")"},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"standardization-z-score-normalization","dir":"Articles","previous_headings":"Scaling the spectra","what":"Standardization (Z-score Normalization)","title":"Introduction","text":"Standardization transforms spectrum mean 0 standard deviation 1, emphasizing deviations average spectral response.","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"mathematical-foundation-1","dir":"Articles","previous_headings":"Scaling the spectra > Standardization (Z-score Normalization)","what":"Mathematical Foundation","title":"Introduction","text":"spectrum, transformation : Standardized value = (Value - Mean) / Standard Deviation Results mean = 0 variance = 1 Emphasizes relative variations around mean","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"application","dir":"Articles","previous_headings":"Scaling the spectra > Standardization (Z-score Normalization)","what":"Application","title":"Introduction","text":"spec_norm_var() function: Calculates mean standard deviation spectrum Applies z-score transformation Centers data around zero Standardizes variance across spectra","code":"CoHAspec_region %>%     spec_norm_var() %>%      spec_smartplot(geom = \"line\")"},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"when-to-use-standardization","dir":"Articles","previous_headings":"Scaling the spectra > Standardization (Z-score Normalization)","what":"When to Use Standardization","title":"Introduction","text":"Standardization appropriate : want emphasize spectral variations Baseline shifts need removed Multivariate analysis requires standardized inputs Focus relative changes rather absolute values","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"choosing-the-right-scaling-method","dir":"Articles","previous_headings":"Scaling the spectra","what":"Choosing the Right Scaling Method","title":"Introduction","text":"choice scaling methods depends analytical objectives:","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"integration-with-tidyverse","dir":"Articles","previous_headings":"","what":"Integration with tidyverse","title":"Introduction","text":"One key strengths tidyspec seamless integration tidyverse ecosystem. design philosophy allows users leverage full power dplyr, tidyr, purrr, tidyverse packages create sophisticated spectral analysis workflows. following examples demonstrate combine tidyspec functions tidyverse tools solve common analytical challenges.","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"case-1-choosing-the-best-baseline-parameters","dir":"Articles","previous_headings":"Integration with tidyverse","what":"Case 1: Choosing the best baseline parameters","title":"Introduction","text":"Parameter optimization critical aspect spectral preprocessing. rolling ball baseline correction method two key parameters: ws (smoothing factor) wm (window size), finding optimal combination often requires systematic evaluation across multiple parameter sets. tidyverse approach makes process elegant efficient.","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"setting-up-the-parameter-grid","dir":"Articles","previous_headings":"Integration with tidyverse > Case 1: Choosing the best baseline parameters","what":"Setting up the parameter grid","title":"Introduction","text":"First, prepare spectral data focusing specific region applying initial smoothing: Next, create comprehensive parameter grid using tidyr::crossing(), generates possible combinations specified parameter values: approach creates systematic grid 24 parameter combinations (6 × 4), ensuring thorough exploration parameter space.","code":"dados_1030_1285 <- CoHAspec_filt %>%      tidyspec::spec_smooth_sga() %>%     dplyr::filter(Wavenumber <= 1285, Wavenumber >= 1030) params <- tidyr::crossing(ws_val = c(2,4,6,8,10,12),                           wm_val = c(10, 25, 40, 50)) params  #> # A tibble: 24 × 2 #>    ws_val wm_val #>     <dbl>  <dbl> #>  1      2     10 #>  2      2     25 #>  3      2     40 #>  4      2     50 #>  5      4     10 #>  6      4     25 #>  7      4     40 #>  8      4     50 #>  9      6     10 #> 10      6     25 #> # ℹ 14 more rows"},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"applying-baseline-correction-across-parameters","dir":"Articles","previous_headings":"Integration with tidyverse > Case 1: Choosing the best baseline parameters","what":"Applying baseline correction across parameters","title":"Introduction","text":"power tidyverse becomes evident need apply operation across multiple parameter sets. Using dplyr::mutate() purrr::pmap(), can efficiently apply baseline correction parameter combination: pipeline demonstrates several key tidyverse concepts: Nested data structures: row contains complete spectral dataset Functional programming: purrr::pmap() applies baseline correction function across multiple arguments Pipeline operations: step builds upon previous one using pipe operator Automated visualization: purrr::map2() creates customized plots parameter combination","code":"df <- params %>%     dplyr::mutate(spectra = list(dados_1030_1285)) %>%     dplyr::mutate(spectra_blc = purrr::pmap(list(spectra, ws_val, wm_val),                              \\(x, y, z ) spec_blc_rollingBall(.data = x, ws = y, wm = z))) %>%     dplyr::mutate(title = paste0(\"ws = \", ws_val,\" , wm = \", wm_val )) %>%     dplyr::mutate(plot = purrr::map2(spectra_blc, title, ~ spec_smartplot(             .data = .x,             wn_col = \"Wavenumber\",             geom = \"line\") + labs(title = .y)             ))"},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"visualizing-parameter-optimization-results","dir":"Articles","previous_headings":"Integration with tidyverse > Case 1: Choosing the best baseline parameters","what":"Visualizing parameter optimization results","title":"Introduction","text":"final step involves creating comparative visualizations assess effect different parameter combinations:","code":"library(gridExtra) #>  #> Attaching package: 'gridExtra' #> The following object is masked from 'package:dplyr': #>  #>     combine  grid.arrange(grobs = df$plot[1:4], nrow = 2, ncol = 2) grid.arrange(grobs = df$plot[5:8], nrow = 2, ncol = 2) grid.arrange(grobs = df$plot[9:12], nrow = 2, ncol = 2) grid.arrange(grobs = df$plot[13:16], nrow = 2, ncol = 2) grid.arrange(grobs = df$plot[17:20], nrow = 2, ncol = 2) grid.arrange(grobs = df$plot[21:24], nrow = 2, ncol = 2)"},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"benefits-of-the-tidyverse-approach","dir":"Articles","previous_headings":"Integration with tidyverse > Case 1: Choosing the best baseline parameters","what":"Benefits of the tidyverse approach","title":"Introduction","text":"workflow demonstrates several advantages integrating tidyspec tidyverse: Scalability: Easy add parameters parameter values Reproducibility: steps clearly documented can easily modified Efficiency: Vectorized operations handle multiple datasets simultaneously Flexibility: step can customized extended needed Readability: pipeline structure makes analysis workflow transparent","code":""},{"path":"https://marceelrf.github.io/tidyspec/articles/introduction.html","id":"extending-the-approach","dir":"Articles","previous_headings":"Integration with tidyverse > Case 1: Choosing the best baseline parameters","what":"Extending the approach","title":"Introduction","text":"methodology can extended optimize spectral processing parameters: Smoothing parameters (window size, polynomial order) Normalization methods ranges Derivative calculation parameters Spectral filtering ranges combination tidyspec functions tidyverse tools creates powerful framework systematic spectral analysis, enabling researchers make data-driven decisions preprocessing parameters maintaining clean, reproducible code.","code":""},{"path":"https://marceelrf.github.io/tidyspec/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marcel Ferreira. Author, maintainer. Willian Zambuzzi. Data contributor. Julia Moraes. Data contributor, contributor. Emerson Araujo Alves dos Santos. Contributor.","code":""},{"path":"https://marceelrf.github.io/tidyspec/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ferreira M (2025). tidyspec: Spectroscopy Analysis Using Tidy Data Philosophy. R package version 0.1.0, https://github.com/marceelrf/tidyspec.","code":"@Manual{,   title = {tidyspec: Spectroscopy Analysis Using the Tidy Data Philosophy},   author = {Marcel Ferreira},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/marceelrf/tidyspec}, }"},{"path":"https://marceelrf.github.io/tidyspec/index.html","id":"tidyspec-","dir":"","previous_headings":"","what":"Welcome to tidyspec!","title":"Welcome to tidyspec!","text":"goal tidyspec provide friendly pipeline spectroscopy analysis using tidy data philosophy.","code":""},{"path":"https://marceelrf.github.io/tidyspec/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Welcome to tidyspec!","text":"can install CRAN: can install development version tidyspec GitHub :","code":"install.packages(\"tidyspec\") # install.packages(\"devtools\") devtools::install_github(\"marceelrf/tidyspec\")"},{"path":"https://marceelrf.github.io/tidyspec/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"Welcome to tidyspec!","text":"tidyspec package design enable data analysis spectroscopy data (IR, Raman, NMR) tidy-data format. 6 families functions tidyspec, starting spec_: Transformation: Convert data absorbance transmittance (spec_abs2trans) & transmittance absorbance (spec_trans2abs). Normalize: Normalize data range 0-1 (spec_norm_01), normalize custom range (spec_norm_minmax), normalize standard deviation one (spec_norm_var). Baseline correction: Correct baseline using rolling ball algorithm (spec_blc_rollingBall) Iterative Restricted Least Squares (spec_blc_irls). function spec_bl return baseline vectors (spec_bl_rollingBall, spec_bl_irls). Smooth correction: Smooth data using average window (spec_smooth_avg) using Savitzky-Golay algorithm (spec_smooth_sga). Derivative: Create differential data spectra (spec_diff). Preview: Preview data applying changes statically (spec_smartplot) interactively (spec_smartplotly). Import/Export: Import spectra data common data formats, like csv, txt, tsv, xslx xls, spec_read. Export functions created next moment, user can easily use readr writexl functions. function set_spec_wn simplifies use functions globally defining column contains wave numbers. User can check wavenumber column check_wn_col.","code":""},{"path":"https://marceelrf.github.io/tidyspec/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Welcome to tidyspec!","text":"basic example shows solve common problem:","code":"library(tidyspec)"},{"path":"https://marceelrf.github.io/tidyspec/index.html","id":"the-data","dir":"","previous_headings":"Example","what":"The data","title":"Welcome to tidyspec!","text":"","code":"head(CoHAspec) #> # A tibble: 6 x 5 #>   Wavenumber CoHA01 CoHA025 CoHA05 CoHA100 #>        <dbl>  <dbl>   <dbl>  <dbl>   <dbl> #> 1       399.  0.871    1.36  1.17    1.05  #> 2       401.  0.893    1.24  1.05    0.925 #> 3       403.  0.910    1.20  0.997   0.876 #> 4       405.  0.914    1.19  0.982   0.867 #> 5       407.  0.908    1.18  0.965   0.857 #> 6       409.  0.887    1.14  0.936   0.828"},{"path":"https://marceelrf.github.io/tidyspec/index.html","id":"set-the-wavenumber-column","dir":"","previous_headings":"Example","what":"Set the wavenumber column","title":"Welcome to tidyspec!","text":"","code":"set_spec_wn(\"Wavenumber\") #> Successfully set 'Wavenumber' as the default wavenumber column.  check_wn_col() #> The current wavenumber column is: Wavenumber"},{"path":"https://marceelrf.github.io/tidyspec/index.html","id":"plot-the-data","dir":"","previous_headings":"Example","what":"Plot the data","title":"Welcome to tidyspec!","text":"","code":"spec_smartplot(CoHAspec) #> Warning: wn_col not specified. Using default value: Wavenumber. #> This message is shown at most once every 2 hours. #> Warning: xmin not specified. Using default value: 399.1992. #> This message is shown at most once every 2 hours. #> Warning: xmax not specified. Using default value: 3999.706. #> This message is shown at most once every 2 hours."},{"path":"https://marceelrf.github.io/tidyspec/index.html","id":"convert-to-trasmittance","dir":"","previous_headings":"Example","what":"Convert to trasmittance","title":"Welcome to tidyspec!","text":"","code":"CoHAspec |>     spec_abs2trans() |>     spec_smartplot(type = \"transmittance\")"},{"path":"https://marceelrf.github.io/tidyspec/index.html","id":"select-the-spectra","dir":"","previous_headings":"Example","what":"Select the spectra","title":"Welcome to tidyspec!","text":"","code":"spec_select(CoHAspec, CoHA01) |>   spec_smartplot(geom = \"line\")"},{"path":"https://marceelrf.github.io/tidyspec/index.html","id":"the-future-of-tidyspec","dir":"","previous_headings":"","what":"The future of tidyspec","title":"Welcome to tidyspec!","text":"plan tidyspec first step toward complete ecosystem spectral data analysis. spectral band analysis, creating bandspec package handles different band profiles. also intend create package focused producing publication-level graphics spectral data. haven’t thought name yet, welcome suggestions!","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/CoHAspec.html","id":null,"dir":"Reference","previous_headings":"","what":"CoHAspec Dataset — CoHAspec","title":"CoHAspec Dataset — CoHAspec","text":"dataset containing spectral absorbance measurements different concentrations CoHA.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/CoHAspec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CoHAspec Dataset — CoHAspec","text":"","code":"CoHAspec"},{"path":"https://marceelrf.github.io/tidyspec/reference/CoHAspec.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CoHAspec Dataset — CoHAspec","text":"data frame 6 rows 5 columns: Wavenumber Numeric. spectral wavenumber (cm-1). CoHA01 Numeric. Absorbance values CoHA 1 mM Cobalt concentration. CoHA025 Numeric. Absorbance values CoHA 2.5 mM Cobalt concentration. CoHA05 Numeric. Absorbance values CoHA 5 mM Cobalt concentration. CoHA100 Numeric. Absorbance values CoHA 10 mM Cobalt concentration.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/CoHAspec.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CoHAspec Dataset — CoHAspec","text":"de Almeida GS, Ferreira MR, da Costa Fernandes CJ, et al. Development cobalt (Co)-doped monetites bone regeneration. J Biomed Mater Res. 2024; 112(1):e35319. <doi:10.1002/jbm.b.35319>","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/CoHAspec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CoHAspec Dataset — CoHAspec","text":"","code":"data(CoHAspec) head(CoHAspec) #> # A tibble: 6 × 5 #>   Wavenumber CoHA01 CoHA025 CoHA05 CoHA100 #>        <dbl>  <dbl>   <dbl>  <dbl>   <dbl> #> 1       399.  0.871    1.36  1.17    1.05  #> 2       401.  0.893    1.24  1.05    0.925 #> 3       403.  0.910    1.20  0.997   0.876 #> 4       405.  0.914    1.19  0.982   0.867 #> 5       407.  0.908    1.18  0.965   0.857 #> 6       409.  0.887    1.14  0.936   0.828"},{"path":"https://marceelrf.github.io/tidyspec/reference/check_wn_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the Currently Set Wavenumber Column — check_wn_col","title":"Check the Currently Set Wavenumber Column — check_wn_col","text":"function checks column set default wavenumber column. column set, prints message prompting user define one.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/check_wn_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the Currently Set Wavenumber Column — check_wn_col","text":"","code":"check_wn_col(show_val = FALSE)"},{"path":"https://marceelrf.github.io/tidyspec/reference/check_wn_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the Currently Set Wavenumber Column — check_wn_col","text":"show_val Logical. `TRUE`, function returns name current wavenumber column. Default `FALSE`.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/check_wn_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the Currently Set Wavenumber Column — check_wn_col","text":"`show_val = TRUE`, returns name wavenumber column (character). Otherwise, prints message.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/check_wn_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the Currently Set Wavenumber Column — check_wn_col","text":"","code":"set_spec_wn(\"Wavenumber\")  # Set the wavenumber column #> Successfully set 'Wavenumber' as the default wavenumber column. check_wn_col()             # Check which column is set #> The current wavenumber column is: Wavenumber check_wn_col(show_val = TRUE)  # Check and return the column name #> The current wavenumber column is: Wavenumber #> [1] \"Wavenumber\""},{"path":"https://marceelrf.github.io/tidyspec/reference/demo_rolling_ball.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage Example and Test — demo_rolling_ball","title":"Usage Example and Test — demo_rolling_ball","text":"Function demonstrate use implemented functions","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/demo_rolling_ball.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Usage Example and Test — demo_rolling_ball","text":"","code":"demo_rolling_ball(verbose = TRUE)"},{"path":"https://marceelrf.github.io/tidyspec/reference/demo_rolling_ball.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Usage Example and Test — demo_rolling_ball","text":"verbose Logical indicating whether print progress messages","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/demo_rolling_ball.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Usage Example and Test — demo_rolling_ball","text":"list containing two elements: simple Results simple rolling ball method morphology Results mathematical morphology method","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/demo_rolling_ball.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Usage Example and Test — demo_rolling_ball","text":"","code":"# \\donttest{ # Run the demonstration demo_results <- demo_rolling_ball() #> Rolling Ball Baseline Correction Demonstration #> ============================================ #>  #> Applying Rolling Ball (simple method)... #> Applying Rolling Ball (mathematical morphology)...   #>  #> Demonstration completed! #> Try different wm/radius values to optimize the results.  # Access results simple_method <- demo_results$simple morphology_method <- demo_results$morphology # }"},{"path":"https://marceelrf.github.io/tidyspec/reference/plot_rolling_ball.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Rolling Ball Results — plot_rolling_ball","title":"Plot Rolling Ball Results — plot_rolling_ball","text":"Convenience function visualize results","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/plot_rolling_ball.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Rolling Ball Results — plot_rolling_ball","text":"","code":"plot_rolling_ball(   result,   title = \"Rolling Ball Baseline Correction\",   x_values = NULL )"},{"path":"https://marceelrf.github.io/tidyspec/reference/plot_rolling_ball.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Rolling Ball Results — plot_rolling_ball","text":"result Result rolling_ball rolling_ball_morphology function title Plot title x_values X-axis values (optional)","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/plot_rolling_ball.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Rolling Ball Results — plot_rolling_ball","text":"return value, called side effects (creates plot)","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/rolling_ball.html","id":null,"dir":"Reference","previous_headings":"","what":"Rolling Ball Baseline Correction — rolling_ball","title":"Rolling Ball Baseline Correction — rolling_ball","text":"Implements rolling ball baseline correction method","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/rolling_ball.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rolling Ball Baseline Correction — rolling_ball","text":"","code":"rolling_ball(x, wm, ws = 0)"},{"path":"https://marceelrf.github.io/tidyspec/reference/rolling_ball.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rolling Ball Baseline Correction — rolling_ball","text":"x Numeric vector containing spectrum/signal values wm Window width (ball radius). Larger values = smoother baseline ws Smoothing window width (optional)","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/rolling_ball.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rolling Ball Baseline Correction — rolling_ball","text":"list three components: baseline Numeric vector containing estimated baseline values corrected Numeric vector containing baseline-corrected signal (original - baseline) original Numeric vector containing original input signal","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/rolling_ball.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rolling Ball Baseline Correction — rolling_ball","text":"","code":"# Example with simulated data x <- seq(1, 100, by = 1) y <- sin(x/10) + 0.1*x + rnorm(100, 0, 0.1) result <- rolling_ball(y, wm = 10) plot(x, y, type = \"l\", col = \"blue\", main = \"Rolling Ball Correction\") lines(x, result$baseline, col = \"red\", lwd = 2) lines(x, result$corrected, col = \"green\") legend(\"topright\", c(\"Original\", \"Baseline\", \"Corrected\"),        col = c(\"blue\", \"red\", \"green\"), lty = 1)"},{"path":"https://marceelrf.github.io/tidyspec/reference/rolling_ball_morphology.html","id":null,"dir":"Reference","previous_headings":"","what":"Enhanced Rolling Ball with Mathematical Morphology — rolling_ball_morphology","title":"Enhanced Rolling Ball with Mathematical Morphology — rolling_ball_morphology","text":"sophisticated version rolling ball using mathematical morphology concepts","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/rolling_ball_morphology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enhanced Rolling Ball with Mathematical Morphology — rolling_ball_morphology","text":"","code":"rolling_ball_morphology(x, radius, smooth = TRUE)"},{"path":"https://marceelrf.github.io/tidyspec/reference/rolling_ball_morphology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enhanced Rolling Ball with Mathematical Morphology — rolling_ball_morphology","text":"x Numeric vector containing spectrum/signal values radius Radius structuring ball smooth Apply additional smoothing (logical)","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/rolling_ball_morphology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enhanced Rolling Ball with Mathematical Morphology — rolling_ball_morphology","text":"list three components: baseline Numeric vector containing estimated baseline values using morphological operations corrected Numeric vector containing baseline-corrected signal (original - baseline) original Numeric vector containing original input signal","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/set_spec_wn.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the Default Wavenumber Column — set_spec_wn","title":"Set the Default Wavenumber Column — set_spec_wn","text":"Defines default wavenumber column name used functions package `wn_col` explicitly provided.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/set_spec_wn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the Default Wavenumber Column — set_spec_wn","text":"","code":"set_spec_wn(col_name)"},{"path":"https://marceelrf.github.io/tidyspec/reference/set_spec_wn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the Default Wavenumber Column — set_spec_wn","text":"col_name string specifying name wavenumber column.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/set_spec_wn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the Default Wavenumber Column — set_spec_wn","text":"Invisibly returns assigned column name.","code":""},{"path":[]},{"path":"https://marceelrf.github.io/tidyspec/reference/set_spec_wn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the Default Wavenumber Column — set_spec_wn","text":"","code":"set_spec_wn(\"Wavenumber\") #> Successfully set 'Wavenumber' as the default wavenumber column."},{"path":"https://marceelrf.github.io/tidyspec/reference/smooth_baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Baseline Smoothing — smooth_baseline","title":"Baseline Smoothing — smooth_baseline","text":"Auxiliary function smooth baseline using moving average","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/smooth_baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baseline Smoothing — smooth_baseline","text":"","code":"smooth_baseline(baseline, ws)"},{"path":"https://marceelrf.github.io/tidyspec/reference/smooth_baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Baseline Smoothing — smooth_baseline","text":"baseline Vector baseline ws Smoothing window width","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/smooth_baseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Baseline Smoothing — smooth_baseline","text":"Smoothed numeric vector length input","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_abs2trans.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Absorbance Data to Transmittance — spec_abs2trans","title":"Convert Absorbance Data to Transmittance — spec_abs2trans","text":"function converts absorbance data transmittance using formula \\(T = 10^{(2 - )}\\), \\(\\) absorbance \\(T\\) transmittance.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_abs2trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Absorbance Data to Transmittance — spec_abs2trans","text":"","code":"spec_abs2trans(.data, wn_col = NULL)"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_abs2trans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Absorbance Data to Transmittance — spec_abs2trans","text":".data `data.frame` `tibble` containing spectral data absorbance. wn_col character string specifying column name wavelength data. Default `\"Wn\"`.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_abs2trans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Absorbance Data to Transmittance — spec_abs2trans","text":"`tibble` converted transmittance data, containing wavelength column numeric transmittance columns. rows infinite values removed.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_bl_rollingBall.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Rolling Ball Baseline from Spectral Data — spec_bl_rollingBall","title":"Extract Rolling Ball Baseline from Spectral Data — spec_bl_rollingBall","text":"function extracts rolling ball baseline spectral data within specified wavelength range. returns baseline, corrected data.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_bl_rollingBall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Rolling Ball Baseline from Spectral Data — spec_bl_rollingBall","text":"","code":"spec_bl_rollingBall(   .data,   wn_col = NULL,   wn_min = NULL,   wn_max = NULL,   wm,   ws = 0,   is_abs = TRUE )"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_bl_rollingBall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Rolling Ball Baseline from Spectral Data — spec_bl_rollingBall","text":".data `data.frame` `tibble` containing spectral data. wn_col character string specifying column name wavelength data. Default `\"Wn\"`. wn_min numeric value specifying minimum wavelength consider baseline correction. wn_max numeric value specifying maximum wavelength consider baseline correction. wm numeric value window size rolling ball algorithm. ws numeric value smoothing factor rolling ball algorithm. is_abs logical value indicating whether data already absorbance. `TRUE`, absorbance used directly; `FALSE`, data converted absorbance extracting baseline.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_bl_rollingBall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Rolling Ball Baseline from Spectral Data — spec_bl_rollingBall","text":"`tibble` baseline data, containing wavelength column baseline numeric column.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_bl_rollingBall.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract Rolling Ball Baseline from Spectral Data — spec_bl_rollingBall","text":"Baseline estimation performed using custom rolling ball implementation.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_blc_rollingBall.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Rolling Ball Baseline Correction to Spectral Data — spec_blc_rollingBall","title":"Apply Rolling Ball Baseline Correction to Spectral Data — spec_blc_rollingBall","text":"function applies rolling ball baseline correction spectral data within specified wavelength range. allows correction either absorbance transmittance data.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_blc_rollingBall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Rolling Ball Baseline Correction to Spectral Data — spec_blc_rollingBall","text":"","code":"spec_blc_rollingBall(   .data,   wn_col = NULL,   wn_min = NULL,   wn_max = NULL,   wm,   ws = 0,   is_abs = TRUE )"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_blc_rollingBall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Rolling Ball Baseline Correction to Spectral Data — spec_blc_rollingBall","text":".data `data.frame` `tibble` containing spectral data. wn_col character string specifying column name wavelength data. Default `\"Wn\"`. wn_min numeric value specifying minimum wavelength consider baseline correction. wn_max numeric value specifying maximum wavelength consider baseline correction. wm numeric value window size rolling ball algorithm. ws numeric value smoothing factor rolling ball algorithm. is_abs logical value indicating whether data already absorbance. `TRUE`, absorbance used directly; `FALSE`, data converted absorbance applying baseline correction.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_blc_rollingBall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Rolling Ball Baseline Correction to Spectral Data — spec_blc_rollingBall","text":"`tibble` baseline-corrected spectral data, containing wavelength column corrected numeric columns.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_blc_rollingBall.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Apply Rolling Ball Baseline Correction to Spectral Data — spec_blc_rollingBall","text":"Baseline estimation performed using custom rolling ball implementation.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Differentiation to Spectral Data — spec_diff","title":"Apply Differentiation to Spectral Data — spec_diff","text":"function applies numerical differentiation spectral data, allowing calculation first higher-order differences.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Differentiation to Spectral Data — spec_diff","text":"","code":"spec_diff(.data, wn_col = NULL, degree = 1)"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Differentiation to Spectral Data — spec_diff","text":".data `data.frame` `tibble` containing spectral data. wn_col character string specifying column name wavelength data. Default `\"Wn\"`. degree numeric value specifying degree differentiation. `degree` 0, original data returned without changes.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Differentiation to Spectral Data — spec_diff","text":"`tibble` differentiated spectral data, containing wavelength column differentiated numeric columns. `degree` 0, original data returned.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter spectral data by wavenumber range — spec_filter","title":"Filter spectral data by wavenumber range — spec_filter","text":"function filters spectral dataset based specified wavenumber (`wn`) range. requires wavenumber column previously set using [set_spec_wn()]. `wn_min` /`wn_max` provided, data filtered accordingly. neither provided, original dataset returned unchanged.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter spectral data by wavenumber range — spec_filter","text":"","code":"spec_filter(.data, wn_min = NULL, wn_max = NULL)"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter spectral data by wavenumber range — spec_filter","text":".data data frame containing spectral data. wn_min Optional numeric value. Minimum wavenumber value keep. wn_max Optional numeric value. Maximum wavenumber value keep.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter spectral data by wavenumber range — spec_filter","text":"filtered data frame based wavenumber column.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter spectral data by wavenumber range — spec_filter","text":"","code":"set_spec_wn(\"Wavenumber\") #> Successfully set 'Wavenumber' as the default wavenumber column. spec_filter(CoHAspec, wn_min = 500, wn_max = 1800) #> # A tibble: 674 × 5 #>    Wavenumber CoHA01 CoHA025 CoHA05 CoHA100 #>         <dbl>  <dbl>   <dbl>  <dbl>   <dbl> #>  1       501.  0.894   0.951  0.802   0.649 #>  2       503.  0.908   0.962  0.811   0.658 #>  3       505.  0.921   0.972  0.818   0.666 #>  4       507.  0.935   0.985  0.829   0.678 #>  5       509.  0.951   0.999  0.838   0.689 #>  6       511.  0.969   1.02   0.849   0.702 #>  7       513.  0.987   1.03   0.862   0.718 #>  8       515.  1.00    1.05   0.878   0.737 #>  9       517.  1.02    1.08   0.897   0.762 #> 10       519.  1.05    1.10   0.914   0.787 #> # ℹ 664 more rows"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_norm_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Spectral Data to the [0, 1] Range — spec_norm_01","title":"Normalize Spectral Data to the [0, 1] Range — spec_norm_01","text":"function normalizes numeric spectral data column [0, 1] range, preserving wavelength column.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_norm_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Spectral Data to the [0, 1] Range — spec_norm_01","text":"","code":"spec_norm_01(.data, wn_col = NULL)"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_norm_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Spectral Data to the [0, 1] Range — spec_norm_01","text":".data `data.frame` `tibble` containing spectral data. wn_col character string specifying column name wavelength data. Default `\"Wn\"`.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_norm_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Spectral Data to the [0, 1] Range — spec_norm_01","text":"`tibble` normalized spectral data, containing wavelength column normalized numeric columns.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_norm_minmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Spectral Data to a Specified Range — spec_norm_minmax","title":"Normalize Spectral Data to a Specified Range — spec_norm_minmax","text":"function normalizes numeric spectral data column specified range [min, max], preserving wavelength column.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_norm_minmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Spectral Data to a Specified Range — spec_norm_minmax","text":"","code":"spec_norm_minmax(.data, wn_col = NULL, min = 0, max = 1)"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_norm_minmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Spectral Data to a Specified Range — spec_norm_minmax","text":".data `data.frame` `tibble` containing spectral data. wn_col character string specifying column name wavelength data. Default `\"Wn\"`. min numeric value specifying minimum value desired range. Default 0. max numeric value specifying maximum value desired range. Default 1.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_norm_minmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Spectral Data to a Specified Range — spec_norm_minmax","text":"`tibble` normalized spectral data, containing wavelength column normalized numeric columns.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_norm_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize Spectral Data to Unit Variance — spec_norm_var","title":"Standardize Spectral Data to Unit Variance — spec_norm_var","text":"function standardizes numeric spectral data column mean 0 standard deviation 1 (unit variance), preserving wavelength column.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_norm_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize Spectral Data to Unit Variance — spec_norm_var","text":"","code":"spec_norm_var(.data, wn_col = NULL)"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_norm_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize Spectral Data to Unit Variance — spec_norm_var","text":".data `data.frame` `tibble` containing spectral data. wn_col character string specifying column name wavelength data. Default `\"Wn\"`.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_norm_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize Spectral Data to Unit Variance — spec_norm_var","text":"`tibble` standardized spectral data, containing wavelength column standardized numeric columns.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Principal Component Analysis (PCA) on Spectral Data — spec_pca","title":"Perform Principal Component Analysis (PCA) on Spectral Data — spec_pca","text":"function computes Principal Component Analysis (PCA) spectral data, excluding wavenumber column analysis.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Principal Component Analysis (PCA) on Spectral Data — spec_pca","text":"","code":"spec_pca(.data, wn_col = NULL, scale = TRUE, center = TRUE)"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Principal Component Analysis (PCA) on Spectral Data — spec_pca","text":".data data frame containing spectral data, one column representing wavenumbers remaining columns containing spectral intensity values. wn_col string specifying name column contains wavenumber values. NULL, function attempts retrieve default wavenumber column set `set_spec_wn()`. scale logical value indicating whether spectral data scaled (default TRUE). center logical value indicating whether spectral data centered (default TRUE).","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Principal Component Analysis (PCA) on Spectral Data — spec_pca","text":"`prcomp` object containing PCA results, including principal   components, standard deviations, loadings.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Principal Component Analysis (PCA) on Spectral Data — spec_pca","text":"","code":"# \\donttest{ set_spec_wn(\"Wavenumber\") #> Successfully set 'Wavenumber' as the default wavenumber column. pca_result <- spec_pca(CoHAspec) summary(pca_result) #> Importance of components: #>                            PC1     PC2     PC3       PC4 #> Standard deviation     38.3080 18.1977 8.32702 3.398e-14 #> Proportion of Variance  0.7856  0.1773 0.03712 0.000e+00 #> Cumulative Proportion   0.7856  0.9629 1.00000 1.000e+00 # }"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_pca_screeplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Scree plot for PCA results — spec_pca_screeplot","title":"Scree plot for PCA results — spec_pca_screeplot","text":"Creates customizable scree plot based `prcomp` object showing variance explained component.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_pca_screeplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scree plot for PCA results — spec_pca_screeplot","text":"","code":"spec_pca_screeplot(   pca,   n = 10,   show_labels = TRUE,   show_cumulative = TRUE,   bar_color = \"steelblue\",   line_color = \"darkred\",   show_kaiser = FALSE,   title = \"Scree Plot\",   subtitle = NULL,   accuracy = 1 )"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_pca_screeplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scree plot for PCA results — spec_pca_screeplot","text":"pca PCA object returned [prcomp()]. n Number components display. Defaults 10. show_labels Logical. Show percentage labels bars? Default TRUE. show_cumulative Logical. Show cumulative variance line? Default TRUE. bar_color Fill color bars. Default \"steelblue\". line_color Color cumulative line points. Default \"darkred\". show_kaiser Logical. Show Kaiser criterion line? Default FALSE. title Plot title. Default \"Scree Plot\". subtitle Optional plot subtitle. accuracy Number decimal places variance percentages. Default 1.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_pca_screeplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scree plot for PCA results — spec_pca_screeplot","text":"ggplot2 scree plot object.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_pca_screeplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scree plot for PCA results — spec_pca_screeplot","text":"","code":"pca <- prcomp(USArrests, scale. = TRUE) spec_pca_screeplot(pca, n = 4)  spec_pca_screeplot(pca, show_kaiser = TRUE, bar_color = \"darkblue\")"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_pca_wn_contrib.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Wavenumber Contributions to Principal Components — spec_pca_wn_contrib","title":"Compute Wavenumber Contributions to Principal Components — spec_pca_wn_contrib","text":"function calculates contribution wavenumber principal components (PCs) PCA result. Contributions computed squared loadings multiplied 100. function calculates contribution wavenumber principal components (PCs) PCA result. Contributions computed squared loadings multiplied 100.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_pca_wn_contrib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Wavenumber Contributions to Principal Components — spec_pca_wn_contrib","text":"","code":"spec_pca_wn_contrib(PCA)  spec_pca_wn_contrib(PCA)"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_pca_wn_contrib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Wavenumber Contributions to Principal Components — spec_pca_wn_contrib","text":"PCA object class `prcomp`, containing results principal component analysis.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_pca_wn_contrib.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Wavenumber Contributions to Principal Components — spec_pca_wn_contrib","text":"tibble containing wavenumber column percentage contribution wavenumber principal component. tibble containing wavenumber column percentage contribution wavenumber principal component.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_pca_wn_contrib.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Wavenumber Contributions to Principal Components — spec_pca_wn_contrib","text":"function extracts PCA loadings (rotation matrix) computes squared values loading, scaled percentage values. helps interpret importance wavenumber defining principal components. function extracts PCA loadings (rotation matrix) computes squared values loading, scaled percentage values. helps interpret importance wavenumber defining principal components.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_pca_wn_contrib.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Wavenumber Contributions to Principal Components — spec_pca_wn_contrib","text":"","code":"# \\donttest{ pca_result <- spec_pca(CoHAspec) wn_contrib <- spec_pca_wn_contrib(pca_result) print(wn_contrib) #> # A tibble: 1,868 × 5 #>    Wavenumber      PC1   PC2   PC3      PC4 #>         <dbl>    <dbl> <dbl> <dbl>    <dbl> #>  1       399. 0.00122  0.118 0.855 50.7     #>  2       401. 0.000366 0.184 0.558  0.00698 #>  3       403. 0.00328  0.212 0.362  8.13    #>  4       405. 0.00485  0.211 0.331  0.00642 #>  5       407. 0.00586  0.210 0.317  0.00453 #>  6       409. 0.00619  0.216 0.280  0.0147  #>  7       411. 0.00597  0.226 0.237  0.00187 #>  8       413. 0.00524  0.237 0.201  0.0152  #>  9       415. 0.00442  0.245 0.178  0.0509  #> 10       417. 0.00120  0.232 0.309  0.0154  #> # ℹ 1,858 more rows # }  # \\donttest{ pca_result <- spec_pca(CoHAspec) wn_contrib <- spec_pca_wn_contrib(pca_result) print(wn_contrib) #> # A tibble: 1,868 × 5 #>    Wavenumber      PC1   PC2   PC3      PC4 #>         <dbl>    <dbl> <dbl> <dbl>    <dbl> #>  1       399. 0.00122  0.118 0.855 50.7     #>  2       401. 0.000366 0.184 0.558  0.00698 #>  3       403. 0.00328  0.212 0.362  8.13    #>  4       405. 0.00485  0.211 0.331  0.00642 #>  5       407. 0.00586  0.210 0.317  0.00453 #>  6       409. 0.00619  0.216 0.280  0.0147  #>  7       411. 0.00597  0.226 0.237  0.00187 #>  8       413. 0.00524  0.237 0.201  0.0152  #>  9       415. 0.00442  0.245 0.178  0.0509  #> 10       417. 0.00120  0.232 0.309  0.0154  #> # ℹ 1,858 more rows # }"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Spectral Data from Various File Formats — spec_read","title":"Read Spectral Data from Various File Formats — spec_read","text":"function reads spectral data file, automatically detecting format using either `readr` `readxl` functions. also sets specified wavenumber column default using `set_spec_wn()`.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Spectral Data from Various File Formats — spec_read","text":"","code":"spec_read(file, wn_col, ...)"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Spectral Data from Various File Formats — spec_read","text":"file Path file read. wn_col Character. Name column containing wavenumber values. column set default wavenumber column. ... Additional arguments passed `readr::read_delim()`, `readr::read_csv()`, `readxl::read_excel()`, depending file format.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Spectral Data from Various File Formats — spec_read","text":"tibble containing spectral data.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_read.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Spectral Data from Various File Formats — spec_read","text":"function automatically determines file format based extension:   - `.txt`, `.csv`, `.tsv`, `.csv2` read using `readr` functions.   - `.xls` `.xlsx` read using `readxl::read_excel()`. specified `wn_col` exist data, error returned.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Spectral Data from Various File Formats — spec_read","text":"","code":"# \\donttest{   file_path <- system.file(\"extdata\", \"CoHAspec.csv\", package = \"tidyspec\")   df <- spec_read(file_path, wn_col = \"Wavenumber\") #> Rows: 1868 Columns: 5 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> dbl (5): Wavenumber, CoHA01, CoHA025, CoHA05, CoHA100 #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Successfully set 'Wavenumber' as the default wavenumber column. #> File loaded successfully! Wavenumber column set to: Wavenumber   check_wn_col() # Verifica se a coluna de wavenumber está definida #> The current wavenumber column is: Wavenumber # }"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Specific Columns in a Spectral Data Frame — spec_select","title":"Select Specific Columns in a Spectral Data Frame — spec_select","text":"function selects user-specified columns spectral dataset, always ensuring wavenumber column (`wn_col`) included, unless explicitly excluded.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Specific Columns in a Spectral Data Frame — spec_select","text":"","code":"spec_select(.data, ...)"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Specific Columns in a Spectral Data Frame — spec_select","text":".data data frame containing spectral data. ... Column selection helpers (e.g., column names, -column_to_exclude).","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Specific Columns in a Spectral Data Frame — spec_select","text":"data frame containing selected columns.","code":""},{"path":[]},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_smartplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Custom Plot for Spectral Data — spec_smartplot","title":"Create a Custom Plot for Spectral Data — spec_smartplot","text":"function generates customizable plot spectral data, allowing selection plot type (absorbance transmittance), x-axis direction, plot geometry (points lines).","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_smartplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Custom Plot for Spectral Data — spec_smartplot","text":"","code":"spec_smartplot(   .data,   wn_col = NULL,   xdir = c(\"reverse\", \"standard\"),   geom = c(\"point\", \"line\"),   xmin = NULL,   xmax = NULL,   alpha = 0.8,   type = c(\"absorbance\", \"transmittance\") )"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_smartplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Custom Plot for Spectral Data — spec_smartplot","text":".data `data.frame` `tibble` containing spectral data. wn_col character string specifying column name wavelength wavenumber data. parameter required. xdir character string specifying direction x-axis. Choices `\"reverse\"` reverse direction (typically used wavenumber) `\"standard\"` standard direction. geom character string specifying geometry plot. Choices `\"point\"` scatter plot `\"line\"` line plot. xmin numeric value specifying minimum x-axis value plot. provided, minimum value `wn_col` data used. xmax numeric value specifying maximum x-axis value plot. provided, maximum value `wn_col` data used. alpha numeric value specifying transparency level plotted points lines. Default 0.8. type character string specifying y-labes transmittance absorbance. Default absorbance.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_smartplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Custom Plot for Spectral Data — spec_smartplot","text":"`ggplot` object representing customized spectral plot (absorbance transmittance function wavelength/wavenumber).","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_smartplotly.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Interactive Plot for Spectral Data using Plotly — spec_smartplotly","title":"Create an Interactive Plot for Spectral Data using Plotly — spec_smartplotly","text":"function generates interactive Plotly plot spectral data, allowing selection plot type (absorbance transmittance), x-axis direction, plot geometry (points lines).","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_smartplotly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Interactive Plot for Spectral Data using Plotly — spec_smartplotly","text":"","code":"spec_smartplotly(   .data,   wn_col = NULL,   type = c(\"absorbance\", \"transmittance\"),   xdir = c(\"reverse\", \"standard\"),   geom = c(\"point\", \"line\"),   xmin = NULL,   xmax = NULL,   alpha = 0.8 )"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_smartplotly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Interactive Plot for Spectral Data using Plotly — spec_smartplotly","text":".data `data.frame` `tibble` containing spectral data. wn_col character string specifying column name wavelength wavenumber data. Default `\"Wn\"`. type character string specifying type data plot. Choices `\"absorbance\"` `\"transmittance\"`. xdir character string specifying direction x-axis. Choices `\"reverse\"` reverse direction (typically used wavenumber) `\"standard\"` standard direction. geom character string specifying geometry plot. Choices `\"point\"` scatter plot `\"line\"` line plot. xmin numeric value specifying minimum x-axis value plot. provided, minimum value `wn_col` data used. xmax numeric value specifying maximum x-axis value plot. provided, maximum value `wn_col` data used. alpha numeric value specifying transparency level plotted points lines. Default 0.8.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_smartplotly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an Interactive Plot for Spectral Data using Plotly — spec_smartplotly","text":"`plotly` object representing interactive spectral plot.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_smooth_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Smoothing to Spectral Data Using a Moving Average — spec_smooth_avg","title":"Apply Smoothing to Spectral Data Using a Moving Average — spec_smooth_avg","text":"function applies moving average smoothing numeric spectral data using specified window size polynomial degree, preserving wavelength column.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_smooth_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Smoothing to Spectral Data Using a Moving Average — spec_smooth_avg","text":"","code":"spec_smooth_avg(.data, wn_col = NULL, window = 15, degree = 2)"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_smooth_avg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Smoothing to Spectral Data Using a Moving Average — spec_smooth_avg","text":".data `data.frame` `tibble` containing spectral data. wn_col character string specifying column name wavelength data. Default `\"Wn\"`. window numeric value specifying window size moving average smoothing. Default 15. degree numeric value specifying degree polynomial smoothing. Default 2.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_smooth_avg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Smoothing to Spectral Data Using a Moving Average — spec_smooth_avg","text":"`tibble` smoothed spectral data, containing wavelength column smoothed numeric columns.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_smooth_sga.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Savitzky-Golay Smoothing to Spectral Data — spec_smooth_sga","title":"Apply Savitzky-Golay Smoothing to Spectral Data — spec_smooth_sga","text":"function applies Savitzky-Golay smoothing numeric spectral data using specified window size, polynomial order, differentiation degree, preserving wavelength column.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_smooth_sga.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Savitzky-Golay Smoothing to Spectral Data — spec_smooth_sga","text":"","code":"spec_smooth_sga(.data, wn_col = NULL, window = 15, forder = 4, degree = 0)"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_smooth_sga.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Savitzky-Golay Smoothing to Spectral Data — spec_smooth_sga","text":".data `data.frame` `tibble` containing spectral data. wn_col character string specifying column name wavelength data. Default `\"Wn\"`. window numeric value specifying window size Savitzky-Golay smoothing. Default 15. forder numeric value specifying polynomial order smoothing. Default 4. degree numeric value specifying degree differentiation. Default 0 (differentiation).","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_smooth_sga.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Savitzky-Golay Smoothing to Spectral Data — spec_smooth_sga","text":"`tibble` smoothed spectral data, containing wavelength column smoothed numeric columns.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_trans2abs.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Spectral Data from Transmittance to Absorbance — spec_trans2abs","title":"Convert Spectral Data from Transmittance to Absorbance — spec_trans2abs","text":"function converts transmittance data absorbance using formula `= 2 - log10(T)`, `T` transmittance. also filters infinite values resulting transformation, preserving wavelength column.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_trans2abs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Spectral Data from Transmittance to Absorbance — spec_trans2abs","text":"","code":"spec_trans2abs(.data, wn_col = NULL)"},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_trans2abs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Spectral Data from Transmittance to Absorbance — spec_trans2abs","text":".data `data.frame` `tibble` containing spectral data. wn_col character string specifying column name wavelength data. Default `\"Wn\"`.","code":""},{"path":"https://marceelrf.github.io/tidyspec/reference/spec_trans2abs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Spectral Data from Transmittance to Absorbance — spec_trans2abs","text":"`tibble` converted absorbance data, containing wavelength column absorbance numeric columns.","code":""},{"path":"https://marceelrf.github.io/tidyspec/news/index.html","id":"tidyspec-020","dir":"Changelog","previous_headings":"","what":"tidyspec 0.2.0","title":"tidyspec 0.2.0","text":"Added NEWS.md file track changes package.","code":""},{"path":[]},{"path":"https://marceelrf.github.io/tidyspec/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"tidyspec (development version)","what":"New features","title":"tidyspec 0.2.0","text":"Added spec_blc_rubberband() function rubberband baseline correction spectral data Added spec_bl_rubberband() function extract rubberband baseline spectral data Rubberband method provides automatic baseline correction connecting local minima points functions support customizable segment length baseline smoothing options","code":""},{"path":"https://marceelrf.github.io/tidyspec/news/index.html","id":"improvements-0-2-0","dir":"Changelog","previous_headings":"tidyspec (development version)","what":"Improvements","title":"tidyspec 0.2.0","text":"Enhanced baseline correction options rubberband algorithm alongside existing rolling ball method Consistent API design rolling ball rubberband baseline functions","code":""}]
